# Docker Compose configuration for Python development
#
# This configuration extends the base build with development-specific settings
#
# Usage:
#   docker compose -f docker-compose.dev.yml build     # Build dev image
#   docker compose -f docker-compose.dev.yml up -d     # Start dev container
#   docker compose -f docker-compose.dev.yml exec python bash  # Get shell
#
# Features:
#   - Mounts the entire project for live editing
#   - Keeps container running for interactive development
#   - Exposes common development ports

services:
  python-dev:
    build: .
    image: ragedunicorn/python:dev
    volumes:
      - .:/app
    working_dir: /app
    stdin_open: true
    tty: true
    # Override entrypoint to get a shell
    entrypoint: /bin/sh
    labels:
      org.opencontainers.image.title: "Python on Alpine Linux (Dev)"
      org.opencontainers.image.description: "Python development environment for testing and debugging"
      org.opencontainers.image.vendor: "ragedunicorn"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TERM=xterm-256color
    # Resource limits for development (optional)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '4'
    #       memory: 4G
